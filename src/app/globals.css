@tailwind base;
@layer base {
  h1, h2, h3, h4, h5, h6 {
    font-family: var(--font-inter);
  }
  
  body {
    font-family: var(--font-inter);
  }
}
@tailwind components;
@tailwind utilities;

:root {
  --background: #ffffff;
  --foreground: #171717;
}

@media (prefers-color-scheme: dark) {
  :root {
    --background: #0a0a0a;
    --foreground: #ededed;
  }
}

body {
  color: var(--foreground);
  background: var(--background);
}

.grid-animation {
  background-size: 50px 50px;
  background-image: 
    linear-gradient(to right, rgba(255,255,255,.1) 1px, transparent 1px),
    linear-gradient(to bottom, rgba(255,255,255,.1) 1px, transparent 1px);
  animation: grid 20s linear infinite;
}

@keyframes grid {
  0% {
    background-position: 0 0;
  }
  100% {
    background-position: -50px -50px;
  }
}

.floating-card {
  transform-style: preserve-3d;
  perspective: 1000px;
}

.grid-pattern {
  position: absolute;
  inset: 0;
  background-image: 
    linear-gradient(to right, rgba(255,255,255,.03) 1px, transparent 1px),
    linear-gradient(to bottom, rgba(255,255,255,.03) 1px, transparent 1px);
  background-size: 60px 60px;
  mask-image: radial-gradient(circle at center, black, transparent 80%);
}

@keyframes float {
  0%, 100% { transform: translate(0, 0) rotate(0deg); }
  25% { transform: translate(10px, -10px) rotate(2deg); }
  50% { transform: translate(0, -20px) rotate(-2deg); }
  75% { transform: translate(-10px, -10px) rotate(2deg); }
}

.gradient-blob {
  animation: float 20s ease-in-out infinite;
  filter: blur(120px);
}

/* Добавляем эффект свечения при hover */
@keyframes glow {
  0%, 100% { filter: brightness(1) blur(120px); }
  50% { filter: brightness(1.2) blur(100px); }
}

.gradient-blob:hover {
  animation: glow 2s ease-in-out infinite;
}

@keyframes noise {
  0%, 100% { transform: translate(0, 0); }
  10% { transform: translate(-5%, -5%); }
  20% { transform: translate(-10%, 5%); }
  30% { transform: translate(5%, -10%); }
  40% { transform: translate(-5%, 15%); }
  50% { transform: translate(-10%, 5%); }
  60% { transform: translate(15%, 0); }
  70% { transform: translate(0, 10%); }
  80% { transform: translate(-15%, 0); }
  90% { transform: translate(10%, 5%); }
}

.bg-noise {
  background-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 256 256' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noise'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.65' numOctaves='3' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noise)'/%3E%3C/svg%3E");
  animation: noise 1s steps(2) infinite;
}

.gradient-blob {
  will-change: transform;
  animation: float 20s ease-in-out infinite;
  filter: blur(120px);
}

@keyframes glow {
  0%, 100% { filter: brightness(1) blur(120px); }
  50% { filter: brightness(1.2) blur(100px); }
}

.gradient-blob:hover {
  animation: glow 2s ease-in-out infinite;
}

.grid-pattern {
  background-image: 
    linear-gradient(to right, rgba(255,255,255,.03) 1px, transparent 1px),
    linear-gradient(to bottom, rgba(255,255,255,.03) 1px, transparent 1px);
  background-size: 60px 60px;
  mask-image: radial-gradient(circle at center, black, transparent 80%);
}
